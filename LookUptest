function LookUptest (){
  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var sheet = spreadsheet.getActiveSheet();
  var arys = [[],[]];      //二次配列定義
  arys = sheet.getRange(1,1,sheet.getMaxRows(),sheet.getMaxColumns()).getValues();   //シート全体取得(2次配列で取得[arys[0][1]])
  var LastRow = sheet.getLastRow();          //シート最終行番号取得
  LastRow = LastRow - 1;   //配列が0から始まるため。また、デフォルトで作成された行以内のデータであれば問題ないが、データ数が多すぎて最後存在しない行まで参照しようとするため
  var data = [];           //一次配列定義
  var count = 0;           //該当セル数カウント用
  console.log("data="+data[0]);
  //日付判定用比較対象
  var today = Moment.moment();          　　　　　　            //現在時刻
  var yesterday = Moment.moment().subtract(1, 'days');        //昨日
  var daybefore = Moment.moment().subtract(2, 'days');        //一昨日
  var mthreedays = Moment.moment().subtract(3, 'days');       //3日前
  var mfourdays = Moment.moment().subtract(4,'days');         //4日前
  var mfivedays = Moment.moment().subtract(5, 'days');        //5日前
  var msixdays = Moment.moment().subtract(6, 'days');         //6日前
  var msevendays = Moment.moment().subtract(7, 'days');       //7日前
  
  for( var i = 0; i <= LastRow; i++ ){
    if( Moment.moment(arys[i][5]).isSame(yesterday, 'day') || Moment.moment(arys[i][5]).isSame(daybefore, 'day') || 
        Moment.moment(arys[i][5]).isSame(mthreedays, 'day') || Moment.moment(arys[i][5]).isSame(mfourdays, 'day') || 
        Moment.moment(arys[i][5]).isSame(mfivedays, 'day') || Moment.moment(arys[i][5]).isSame(msixdays, 'day') || 
        Moment.moment(arys[i][5]).isSame(msevendays, 'day') ){
          if( arys[i][6] != {}){
            if( arys[i][4].length == 0 && arys[i][7].length == 0 ){  //何でかわからんけど=={}(空白の場合)の判定が効かないので、.length==0(配列のデータ数が0の場合)に変更
                data[count] = arys[i][0] +" "+ arys[i][6];    //data[i]で回してるのでpushいらない。アホか
                count++;                     //for文回してif文で判定してるのに全部入ってくるはずないdata[i]に記入させたらそらおかしくなる
            }
          }
    }
  }
  
  if(count == 0){
    var message = "先週の 送付済/送信不可区分 未記入はありませんでした。\n";
    console.log("data="+data[0]);
  }else if(count != 0){
    var message = "先週の 送付済/送信不可区分 未記入一覧です。\n";
    message += data + "\n";
    message += "No 処理者,の表示となっています。";
  }
  var client = ChatWorkClient.factory ({token: 'a68ba27c640b687d6183d1d517d4de1b'});
  client.sendMessage({room_id: 167629607, body: message});
}
